The target of this branch is to consolidate the functionality of the four files into one.
To this end, we need to do a few things:
1. Check for overlap between files - 
	determine what needs to be taken from each file and what is already in all
2. Examine memory usage.  We don't necessarily need all the data to be stored in memory for each func.
-> i.e.: we may be able to remove BF from memory once nodes are authenticated.
	-> I'll belay this for now.  We may want to keep it in the event that a node is hotswapped.
-	-> table this for now.
3. Merge/Create new files and then test.
	-> I think we can make flags stored in EEPROM to show whether the PUF has already been generated.
	-> At least for testing purposes, that can reduce wear on EEPROM and simplify the control flow of the programs.

12/4:
Idea I just had.  We can have only 1 program by checking EEPROM[0] (nodeID).  
So if EEPROM[0] is D, then we know that should be the sender and the other three can be receivers.

Ideally, it shouldn't matter who is the receiver and who is the sender, but we'll deal with that
issue another time.

Key takeaways from analysis (1):
-Proto_Sender and Proto_Receiver overlap a ton.
-PUF_Reader and Bloom_Filter are both pretty small.
My plan:
We start by combining Sender and Receiver into one file 
(maybe that's a bad idea, could cause file to be too big - we'll see)

After that, we can fold PUF_Reader into Bloom_filter...actually, maybe we do that first. -> Done, need to test and also add functionality to free up memory.
What we need to make sure we do is only keep the necessary data/vars from PUF_Reader/Bloom_Filter
before moving into reader/sender functionality.

Should receivers hold all the keys?
-> idea was that keys would be distributed in some way so that if you did want to communicate with a node, thered be a process
to retrieve the key that would be distributed across all the nodes.  
-> Say we could split the keys across all the nodes - each node takes a portion of each key.
-> leaks some info - secret sharing.  
-> Tabled for now.

Compare response arrays

Priority for now:
-> Combine the duplicate functions
-> Combine the BF_PUF file and Proto_SenderReceiver files.